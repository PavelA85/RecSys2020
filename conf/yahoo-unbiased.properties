data.path=datasets/yahoo/
data.test.path=datasets/yahoo/unbiased-test.txt
data.threshold=4
results.path=results/unbiased/yahoo-
crossvalidation.nfolds=5
evaluation.cutoff=10
# rnd, gender, default:NONE
fill.mode=rnd
sampler.mode=rnd
targetselection.targetsizes=1000

algorithms.run.all=false

# Params for running the whole set of algorithms 
# (regardless full or test configuration)
algorithms.knn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000

algorithms.normknn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000
algorithms.normknn.min=3

#algorithms.imf.k=5,10,20,30,50
#algorithms.imf.lambda=0.1,0.5,1,2,3,5,10
#algorithms.imf.alpha=1,5,10,15,50,100
algorithms.imf.k=5,10,50
algorithms.imf.lambda=0.1,1,10
algorithms.imf.alpha=1,10,100

# Full parameter configuration
algorithms.full.knn.k=200

algorithms.full.normknn.k=20
algorithms.full.normknn.min=3

algorithms.full.imf.k=10
algorithms.full.imf.lambda=3
algorithms.full.imf.alpha=5
#[['Normalized kNN (k=20, min=3)' 0.00901271302656748]]
#[['iMF (k=10, lambda=3.0, alpha=5.0)' 0.011714085530021139]]
#[['kNN (k=200)' 0.01083332676732226]]

#Test parameter configuration
algorithms.test.knn.k=10

algorithms.test.normknn.k=10
algorithms.test.normknn.min=3

algorithms.test.imf.k=10
algorithms.test.imf.lambda=0.1
algorithms.test.imf.alpha=1
#[['Normalized kNN (k=10, min=3)' 0.138941140495148]]
#[['iMF (k=10, lambda=0.1, alpha=1.0)' 0.138941140495148]]
#[['kNN (k=10)' 0.138941140495148]]