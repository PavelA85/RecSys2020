data.path=datasets/ml1m/
data.threshold=4
results.path=results/biased/ml1m-
crossvalidation.nfolds=5
evaluation.cutoff=10
# rnd, gender, default:NONE
fill.mode=rnd
targetselection.targetsizes=0,1,2,5,10,20,50,100,200,500,1000,2000,3706

algorithms.run.all=false

# Params for running the whole set of algorithms 
# (regardless full or test configuration)
algorithms.knn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000,6000

algorithms.normknn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000,6000
algorithms.normknn.min=3

algorithms.imf.k=5,10,50
algorithms.imf.lambda=0.1,1,10
algorithms.imf.alpha=1,10,100

# Full parameter configuration
algorithms.full.knn.k=40

algorithms.full.normknn.k=10
algorithms.full.normknn.min=3

algorithms.full.imf.k=50
algorithms.full.imf.lambda=10
algorithms.full.imf.alpha=1

#Test parameter configuration
algorithms.test.knn.k=90

algorithms.test.normknn.k=400
algorithms.test.normknn.min=3

algorithms.test.imf.k=10
algorithms.test.imf.lambda=0.1
algorithms.test.imf.alpha=100

#C:\Projects\RecSys2020\results\biased\ml1m-allrecs-target-sampling.txt
#	test:
#		[['Normalized kNN (k=300, min=3)' 0.6733476821192053]]
#		[['iMF (k=10, lambda=10.0, alpha=100.0)' 0.6845000000000001]]
#		[['kNN (k=90)' 0.6592582781456955]]
#	full:3706
#		[['Normalized kNN (k=10, min=3)' 0.14576821192052977]]
#		[['iMF (k=50, lambda=10.0, alpha=1.0)' 0.29248675496688736]]
#		[['kNN (k=60)' 0.2556092715231788]]
#
#FScore@10
#C:\Projects\RecSys2020\results\biased\ml1m-allrecs-target-sampling.txt
#	test:
#		[['Normalized kNN (k=400, min=3)' 0.5397936380799886]]
#		[['iMF (k=10, lambda=0.1, alpha=100.0)' 0.5458680018523667]]
#		[['kNN (k=90)' 0.5286563460966321]]
#	full:3706
#		[['Normalized kNN (k=10, min=3)' 0.11138916444516385]]
#		[['iMF (k=50, lambda=10.0, alpha=1.0)' 0.20283625283265622]]
#		[['kNN (k=40)' 0.17730604441116196]]