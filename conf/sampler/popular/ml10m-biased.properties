data.path=D:/ml10m/
data.threshold=4
results.path=results/biased/ml10m-popular-
crossvalidation.nfolds=5
evaluation.cutoff=10
# rnd, gender, default:NONE
fill.mode=rnd
sampler.mode=popular
targetselection.targetsizes=0,1,2,5,10,20,50,100,200,500,1000,2000,10681

algorithms.run.all=false

# Params for running the whole set of algorithms 
# (regardless full or test configuration)
algorithms.knn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000,6000

algorithms.normknn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000,6000
algorithms.normknn.min=3

algorithms.imf.k=5,10,50
algorithms.imf.lambda=0.1,1,10
algorithms.imf.alpha=1,10,100

# Full parameter configuration
algorithms.full.knn.k=70

algorithms.full.normknn.k=10
algorithms.full.normknn.min=3

algorithms.full.imf.k=50
algorithms.full.imf.lambda=10
algorithms.full.imf.alpha=1

#Test parameter configuration
algorithms.test.knn.k=100

algorithms.test.normknn.k=700
algorithms.test.normknn.min=3

algorithms.test.imf.k=10
algorithms.test.imf.lambda=1
algorithms.test.imf.alpha=100

#C:\Projects\RecSys2020\results\biased\ml10m-allrecs-target-sampling.txt
#	test:
#		[['Normalized kNN (k=700, min=3)' 0.5702999513437705]]
#		[['iMF (k=10, lambda=1.0, alpha=100.0)' 0.5743744812387304]]
#		[['kNN (k=100)' 0.5527983056183634]]
#	full:10681
#		[['Normalized kNN (k=10, min=3)' 0.15833538452731905]]
#		[['iMF (k=50, lambda=10.0, alpha=1.0)' 0.2621577606685938]]
#		[['kNN (k=70)' 0.24072097083488364]]