data.path=datasets/yahoo/
data.threshold=4
results.path=results/biased/yahoo-popular-
crossvalidation.nfolds=5
evaluation.cutoff=10
# rnd, gender, default:NONE
fill.mode=rnd
sampler.mode=popular
targetselection.targetsizes=0,1,2,5,10,20,50,100,200,500,1000

algorithms.run.all=false

# Params for running the whole set of algorithms 
# (regardless full or test configuration)
algorithms.knn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000

algorithms.normknn.k=10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000
algorithms.normknn.min=3

algorithms.imf.k=5,10,20,30,50
algorithms.imf.lambda=0.1,0.5,1,2,3,5,10
algorithms.imf.alpha=1,5,10,15,50,100

# Full parameter configuration
algorithms.full.knn.k=100

algorithms.full.normknn.k=20
algorithms.full.normknn.min=3

algorithms.full.imf.k=10
algorithms.full.imf.lambda=0.1
algorithms.full.imf.alpha=1
#full:1000
#[['Normalized kNN (k=20, min=3)' 0.06494592949412874]]
#[['iMF (k=10, lambda=1.0, alpha=1.0)' 0.08425542262115268]]
#[['kNN (k=100)' 0.08086616689204056]]

#Test parameter configuration
algorithms.test.knn.k=600

algorithms.test.normknn.k=600
algorithms.test.normknn.min=3

algorithms.test.imf.k=10
algorithms.test.imf.lambda=0.1
algorithms.test.imf.alpha=10
#test:
#[['Normalized kNN (k=600, min=3)' 0.24775254548561249]]
#[['iMF (k=10, lambda=0.1, alpha=10.0)' 0.24848870051466426]]
#[['kNN (k=600)' 0.2477617873923871]]